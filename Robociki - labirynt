    public void run() {

        enableMovement();
        enableStopOnWall();

        int tachoSave = 0;
        start();
        while (true) {
            trzymajsciane();
            funkcjaRatunku(tachoSave);
        }
    }

    //brak bączków na starcie
    private void start() {
        this.forward();
        spij(5000);
    }

    //sposób ucieczki od nieskończonych pętli
    //sposób prostcacki, zawsze można na lepszy zmienić.
    private void ratunek() {

        this.stop();
        rotateBy(-90);
        spij(1000);
        while (nearestCollision() > 0.3) {
            this.goBy(1);
        }
    }

    //trzymaj się i jedź wzdłuż prawej ściany
    private void trzymajsciane() {
        while (nearestCollision() >= 0.6) {
            this.forward();
            this.rotateRight();
        }
        while (nearestCollision() < 0.6) {
            this.stopGo();
            this.rotateBy(-25);
        }
    }

    //załącza funkcję przerywania nieskończonych pętli
    private int funkcjaRatunku(int tachoSave) {

        while ((this.getRotateTachoCount() - tachoSave) > 360) {
            //System.out.println("Ratunek");
            for (int i = 0; i < 2; i++) {
                ratunek();
            }
            spij(100);
            tachoSave = this.getRotateTachoCount();
        }
        return tachoSave;
    }

    //nic nie rób
    private void spij(long czas) {
        try {
            Thread.sleep((long) (czas / Config.EMULATION_SPEED));
        } catch (final InterruptedException e) {
            e.printStackTrace();
        }
    }
}
